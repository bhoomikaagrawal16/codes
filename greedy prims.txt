#include <stdio.h>
#include <stdbool.h>
#include <string.h>

#define INF 999
#define MAX 10

int Graph[MAX][MAX];

int main() {
    int V;
    printf("Enter the number of vertices: ");
    scanf("%d", &V);

    int selected[V];
    memset(selected, false, sizeof(selected));

    int no_edge = 0;
    selected[0] = true;
    int x, y;

    printf("Enter the adjacency matrix for the graph:\n");
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            printf("Enter weight for edge (%d, %d): ", i+1, j+1);
            scanf("%d", &Graph[i][j]);
        }
    }
    printf("Edge : Weight\n");
    int totalCost = 0;
    while (no_edge < V - 1) {
        int min = INF;
        x = 0;
        y = 0;
        for (int i = 0; i < V; i++) {
            if (selected[i]) {
                for (int j = 0; j < V; j++) {
                    if (!selected[j] && Graph[i][j]) {
                        if (min > Graph[i][j]) {
                            min = Graph[i][j];
                            x = i;
                            y = j;
                        }
                    }
                }
            }
        }
        printf("\n%d - %d : %d\n", x+1, y+1, Graph[x][y]);
        totalCost += Graph[x][y];
        selected[y] = true;
        no_edge++;
    }

    printf("Total Cost of Minimum Spanning Tree: %d\n", totalCost);

    return 0;
}
